I"ZU<!-- <div><img src ="img/pretty-logo.svg" style='width:25%;' border="0" alt ="Sample Output"/></div> -->

<p><a href="#"><img src="https://shadlyd15.github.io/PrettyDebugJS/img/pretty-logo.svg" alt="logo" /></a></p>

<p><a href="https://www.npmjs.com/package/pretty-debug"><img src="https://nodei.co/npm/pretty-debug.png?downloads=true&amp;downloadRank=true&amp;stars=true" alt="npm package" /></a></p>

<p><a href="#"><img src="https://forthebadge.com/images/badges/made-with-javascript.svg" alt="forthebadge" /></a>
<a href="#"><img src="https://forthebadge.com/images/badges/powered-by-responsibility.svg" alt="forthebadge" /></a></p>

<p><a href="#Intro"><img src="https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png" alt="-----------------------------------------------------" /></a></p>

<h2 id="intro">Intro</h2>
<p>A <strong>highly configurable &amp; lightweight debug library</strong> that prints debug messages beautifully. It works in Node.js and Web browser environments with very low memory footprint.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Beautifully colored and formatted output texts</li>
  <li>Pretty prints current file name, function and line number</li>
  <li>Pretty prints date, time with timezone and formatting</li>
  <li>Attach multiple streams and pipe the debug outputs</li>
  <li>Compatible with Node.js stream objects</li>
  <li>Node process and System process memory monitor</li>
  <li>Schedule health check</li>
  <li>Alarm on crossing memory usage thresholds</li>
  <li>System memory high watermark</li>
  <li>Highly configurable</li>
  <li>Very low memory footprint</li>
  <li>No third party library dependency</li>
</ul>

<h2 id="screenshot">Screenshot</h2>

<div><img src="https://raw.githubusercontent.com/shadlyd15/PrettyDebugJS/gh-pages/img/screenshot.png" style="width:100%;" border="0" alt="Sample Output" /></div>

<h2 id="install">Install</h2>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>npm <span class="nb">install </span>pretty-debug
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="usage">Usage</h2>

<p>Pretty Debug exposes a debug object. Just attach any stream you want to the module to pipe debug messages. process.stdout is the default steam which prints output to console. Any other streams like TCP socket or request to an HTTP server can be attached on runtime to pipe the debug output.</p>

<h2 id="api-documentation">API Documentation</h2>

<ul>
  <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html">pretty-debug</a>
    <ul>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.color">.color</a> : <code>Object.&lt;string&gt;</code></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.setOptions">.setOptions(userOptions)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.generatePolicy">.generatePolicy(lowerLimit, upperLimit)</a> ⇒ <code>Object.&lt;policy&gt;</code></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.attachStream">.attachStream(stream)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.detachStream">.detachStream(stream)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.log">.log(…var_args)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.info">.info(…var_args)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.alert">.alert(…var_args)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.warn">.warn(…var_args)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.error">.error(…var_args)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.critical">.critical(…var_args)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.nodeMemoryMonitor">.nodeMemoryMonitor(stream, callback)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.sysMemoryMonitor">.sysMemoryMonitor(alarmPolicy, callback)</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.memoryWatermark">.memoryWatermark()</a></li>
      <li><a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html#.scheduleHealthCheck">.scheduleHealthCheck(inputFunc, timeInMinutes)</a></li>
    </ul>
  </li>
</ul>

<p>For detail information, please see <a href="https://shadlyd15.github.io/PrettyDebugJS/module-pretty-debug.html">API Documentation.</a></p>

<!-- 
### Show/Hide Section

### Change Section Color
Let's say we want to change the color of **Timestamp** to Green and hide the File Name section. 
 -->

<h2 id="basic-usage">Basic usage</h2>

<ul>
  <li><strong>Create debug instance :</strong>
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>  <span class="kd">const</span> <span class="nx">debug</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">pretty-debug</span><span class="dl">'</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li><strong>Set options :</strong>
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>  <span class="nx">debug</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">({</span> 
          <span class="na">enable</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>		<span class="c1">// Turning on debug print</span>
          <span class="na">enableColor</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>	<span class="c1">// Enabling color output</span>
          <span class="na">enableGC</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>		<span class="c1">// Enabling autometic gerbage collection</span>
          <span class="na">debugLevel</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span> 		<span class="c1">// Setting debug level 6 (Upto INFO)</span>
      <span class="p">}</span>  
  <span class="p">});</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li><strong>Attach stream :</strong>
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>  <span class="nx">debug</span><span class="p">.</span><span class="nx">attachStream</span><span class="p">(</span><span class="nx">sock</span><span class="p">);</span> 	<span class="c1">// Attaching new stream to serve debug messages</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li><strong>Detach stream :</strong>
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>  <span class="nx">debug</span><span class="p">.</span><span class="nx">detachStream</span><span class="p">(</span><span class="nx">sock</span><span class="p">);</span> 	<span class="c1">// Detaching stream</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li><strong>Print in different debug levels :</strong>
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>  <span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
  <span class="nx">debug</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
  <span class="nx">debug</span><span class="p">.</span><span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
  <span class="nx">debug</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
  <span class="nx">debug</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
  <span class="nx">debug</span><span class="p">.</span><span class="nx">critical</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li><strong>Show highest RAM usage :</strong>
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>  <span class="nx">debug</span><span class="p">.</span><span class="nx">memoryWatermark</span><span class="p">();</span>	<span class="c1">// Shows highest RAM usage in MB.</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li><strong>Show memory used by OS :</strong>
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>  <span class="nx">debug</span><span class="p">.</span><span class="nx">sysMemoryMonitor</span><span class="p">();</span>	<span class="c1">// Shows memory information of operating system</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li><strong>Show memory used by Node.js :</strong>
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>  <span class="nx">debug</span><span class="p">.</span><span class="nx">nodeMemoryMonitor</span><span class="p">(();</span>	<span class="c1">// Shows memory information of Node.js system</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li><strong>Set alarm policy for RAM usage :</strong>
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>  <span class="nx">debug</span><span class="p">.</span><span class="nx">nodeMemoryMonitor</span><span class="p">({</span>
      <span class="na">heapTotal</span><span class="p">:</span> <span class="p">{</span> <span class="na">upperLimit</span> <span class="p">:</span> <span class="mi">5</span> <span class="p">}</span> <span class="c1">// Trigger alarm when heap usage is greater than 5 MB</span>
  <span class="p">},</span> <span class="kd">function</span><span class="p">(){</span>
      <span class="nx">debug</span><span class="p">.</span><span class="nx">critical</span><span class="p">(</span><span class="dl">'</span><span class="s1">Memory Usage Alarm : Total heap usage is above 5 MB</span><span class="dl">'</span><span class="p">);</span>
      <span class="c1">// Do other things like send email!</span>
  <span class="p">});</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<h2 id="example">Example</h2>
<p>In this example a debug instance is created. For multiple stream demonstration, a TCP server is created. TCP socket is attached to the debug module. So when a client connects to that TCP server, color debug output will be shown on the client console. Health check scheduler is also demonstrated in this example.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
</pre></td><td class="rouge-code"><pre><span class="kd">const</span> <span class="nx">net</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">net</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">debug</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">pretty-debug</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">PORT</span> <span class="o">=</span> <span class="mi">6969</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">HOST</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">0.0.0.0</span><span class="dl">'</span><span class="p">;</span>

<span class="nx">debug</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">({</span>
	<span class="na">nodeMemoryMonitor</span><span class="p">:{</span>
		<span class="na">fields</span><span class="p">:</span> <span class="p">{</span>
			<span class="na">rss</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
			<span class="na">external</span><span class="p">:</span> <span class="kc">false</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">});</span>

<span class="nx">debug</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello Pretty World</span><span class="dl">'</span><span class="p">);</span>

<span class="nx">debug</span><span class="p">.</span><span class="nx">scheduleHealthCheck</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
	<span class="nx">debug</span><span class="p">.</span><span class="nx">memoryWatermark</span><span class="p">();</span>
	<span class="nx">debug</span><span class="p">.</span><span class="nx">sysMemoryMonitor</span><span class="p">();</span>
	<span class="nx">debug</span><span class="p">.</span><span class="nx">nodeMemoryMonitor</span><span class="p">({</span>
			<span class="na">heapTotal</span><span class="p">:</span> <span class="p">{</span> <span class="na">upperLimit</span> <span class="p">:</span> <span class="mi">5</span> <span class="p">}</span>
		<span class="p">},</span> <span class="kd">function</span><span class="p">(){</span>
			<span class="nx">debug</span><span class="p">.</span><span class="nx">critical</span><span class="p">(</span><span class="dl">'</span><span class="s1">Memory Usage Alarm : Total heap usage is above 5 MB</span><span class="dl">'</span><span class="p">);</span>
			<span class="c1">// Do other things like send email!</span>
		<span class="p">});</span>
<span class="p">},</span> <span class="p">.</span><span class="mi">02</span><span class="p">);</span>

<span class="nx">net</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">sock</span><span class="p">){</span>
	<span class="nx">debug</span><span class="p">.</span><span class="nx">attachStream</span><span class="p">(</span><span class="nx">sock</span><span class="p">);</span>
	<span class="nx">sock</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">end</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
		<span class="nx">debug</span><span class="p">.</span><span class="nx">detachStream</span><span class="p">(</span><span class="nx">sock</span><span class="p">);</span>
	<span class="p">});</span> 
<span class="p">}).</span><span class="nx">listen</span><span class="p">(</span><span class="nx">PORT</span><span class="p">,</span> <span class="nx">HOST</span><span class="p">);</span>

<span class="kd">function</span> <span class="nx">generateRandomLog</span><span class="p">(){</span>
	<span class="nx">debug</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
	<span class="nx">debug</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
	<span class="nx">debug</span><span class="p">.</span><span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
	<span class="nx">debug</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
	<span class="nx">debug</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
	<span class="nx">debug</span><span class="p">.</span><span class="nx">critical</span><span class="p">(</span><span class="dl">'</span><span class="s1">The quick brown fox jumps over the lazy dog</span><span class="dl">'</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
	<span class="nx">generateRandomLog</span><span class="p">();</span>
<span class="p">},</span> <span class="mi">678</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="run-example">Run Example</h2>
<p>To run the example above, simply put this command and press Enter!</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>node Examples/example.js
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="sample-output">Sample Output</h2>
<div><img src="https://raw.githubusercontent.com/shadlyd15/PrettyDebugJS/gh-pages/img/screenshot.png" style="width:100%;" border="0" alt="Sample Output" /></div>

<h2 id="tutorials">Tutorials</h2>
<p>All the tutorials and examples can be found in the link below :</p>
<ul>
  <li><a href="https://shadlyd15.github.io/PrettyDebugJS/tutorial-0.%20How%20To%20Use.html">How To Use</a></li>
  <li><a href="https://shadlyd15.github.io/PrettyDebugJS/tutorial-1.%20Basics.html">Basics</a></li>
  <li><a href="https://shadlyd15.github.io/PrettyDebugJS/tutorial-2.%20Memory%20Monitor.html">Memory Monitor</a></li>
  <li><a href="https://shadlyd15.github.io/PrettyDebugJS/tutorial-3.%20Shedule%20Healthcheck.html">Shedule Healthcheck</a></li>
  <li><a href="https://shadlyd15.github.io/PrettyDebugJS/tutorial-4.%20Set%20Alarm.html">Set Alarm</a></li>
  <li><a href="https://shadlyd15.github.io/PrettyDebugJS/tutorial-5.%20Set%20Options.html">Set Options</a></li>
  <li><a href="https://shadlyd15.github.io/PrettyDebugJS/tutorial-6.%20Attach%20Multiple%20Stream.html">Attach Multiple Stream</a></li>
  <li><a href="https://shadlyd15.github.io/PrettyDebugJS/tutorial-8.%20Send%20Email%20On%20Alarm.html">Send Email On Alarm</a></li>
  <li><a href="https://shadlyd15.github.io/PrettyDebugJS/tutorial-7.%20Summary.html">Summary</a></li>
</ul>

<h2 id="customization">Customization</h2>
<p>As it was mentioned earlier, this library is highly configurable.
For more details, please see <a href="https://shadlyd15.github.io/PrettyDebugJS/module-defaultOptions.html">Default Options.</a></p>

<h2 id="contributing">Contributing</h2>
<p>If you are interested in requesting a feature, fixing issues and contributing directly to the code base, please do not hesitate.</p>

<h2 id="license">License</h2>
<p>Licensed under the <a href="LICENSE">MIT</a> License.</p>
:ET