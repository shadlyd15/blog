I"Ю/<p>Interrupt ржПрж░ ржЕрж░рзНрже рж╣рж▓ ржорж╛ржЭржкржерзЗ ржмрж╛ржБржзрж╛ ржжрзЗрзЯрж╛ред ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржП ржХрзЛржи ржХрзЛржб ржЪрж▓рж╛рж░ рж╕ржорзЯ ржпржжрж┐ ржЖржорж░рж╛ ржР ржХрзЛржбрзЗрж░ ржХрж╛ржЬ ржмрж╛ржж ржжрж┐рзЯрзЗ ржЕржирзНржпржХрзЛржи ржХрж╛ржЬ ржХрж░рждрзЗ ржЪрж╛ржЗ рждрж╛рж╣рж▓рзЗ Interrupt ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ рж╣ржмрзЗред ржзрж░рж┐, while loop ржПрж░ ржнрзЗрждрж░рзЗ ржПржХржЯрж┐ LED Blink ржХрж░рж╛рж░ ржЬржирзНржп ржХрзЛржб ржХрж░рж╛ ржЖржЫрзЗ ржПржнрж╛ржмрзЗ тАУ</p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="cp">#include &lt;avr/io.h&gt; // io.h Header File ржПрж░ рж╕ржВржпрзБржХрзНрждрж┐
#include &lt;util/delay.h&gt; // delay.h Header File ржПрж░ рж╕ржВржпрзБржХрзНрждрж┐
</span><span class="kt">int</span>  <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// main ржлрж╛ржВрж╢ржирзЗрж░ рж╢рзБрж░рзБ{</span>
	<span class="n">DDRC</span>  <span class="o">|=</span>  <span class="mi">1</span>  <span class="o">&lt;&lt;</span>  <span class="mi">5</span><span class="p">;</span>  <span class="c1">// ржкрзЛрж░рзНржЯ рж╕рж┐ ржПрж░ рзл ржиржорзНржмрж░ ржкрж┐ржиржХрзЗ ржЖржЙржЯржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржирзЗрзЯрж╛ рж╣рж▓</span>
	<span class="k">while</span>  <span class="p">(</span><span class="mi">1</span><span class="p">){</span>  <span class="c1">// Infinite Loop</span>
		<span class="n">PORTC</span><span class="o">|=</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="mi">5</span><span class="p">);</span>  <span class="c1">// ржкрж┐ржи ржиржорзНржмрж░ рзл ржХрзЗ High ржХрж░рж╛ рж╣рж▓</span>
		<span class="n">_delay_ms</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span>  <span class="c1">//ржХрзЛржбрзЗржЯрж╛ржХрзЗ ржХрж┐ржЫрзБ рж╕ржорзЯрзЗрж░ ржЬржирзНржп ржерж╛ржорж╛ржирзЛ рж╣рж▓</span>
		<span class="n">PORTC</span><span class="o">&amp;=~</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="mi">5</span><span class="p">);</span>  <span class="c1">// ржкрж┐ржи ржиржорзНржмрж░ рзл ржХрзЗ Low ржХрж░рж╛ рж╣рж▓</span>
		<span class="n">_delay_ms</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span>  <span class="c1">//ржХрзЛржбрзЗржЯрж╛ржХрзЗ ржЖржмрж╛рж░ ржХрж┐ржЫрзБ рж╕ржорзЯрзЗрж░ ржЬржирзНржп ржерж╛ржорж╛ржирзЛ рж╣рж▓</span>
	<span class="p">}</span>  <span class="c1">// Infinite Loop рж╢рзЗрж╖</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>ржпрзЗрж╣рзЗрждрзБ C Program рж▓рж╛ржЗржи ржмрж╛ржЗ рж▓рж╛ржЗржирзЗ Execute рж╣рзЯ рждрж╛ржЗ ржПржЦрж╛ржирзЗржУ ржПржХржЗ ржЬрж┐ржирж┐рж╕ рж╣ржмрзЗред ржПржЦржи ржпржжрж┐ рзк ржиржорзНржмрж░ рж▓рж╛ржЗржи Execute рж╣ржмрж╛рж░ рж╕ржорзЯ ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржП Interrupt Call ржХрж░рж╛ рж╣рзЯ рждрж╛рж╣рж▓рзЗ рж╕рзЗ рзл ржиржорзНржмрж░ рж▓рж╛ржЗржирзЗ ржирж╛ ржЧрж┐рзЯрзЗ рж╕рж░рж╛рж╕рж░рж┐ Interrupt ржПрж░ ржЬржирзНржп ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржХрж╛ржЬрзЗ ржЪрж▓рзЗ ржпрж╛ржмрзЗред ржПржЗ ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржХрж╛ржЬ рж╢рзЗрж╖ рж╣рж▓рзЗ рж╕рзЗ ржЖржмрж╛рж░ рзл ржиржорзНржмрж░ рж▓рж╛ржЗржи ржерзЗржХрзЗ ржХрж╛ржЬ рж╢рзБрж░рзБ ржХрж░ржмрзЗред Interrupt ржПрж░ ржЬржирзНржп ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржХрж╛ржЬ main() ржлрж╛ржВрж╢ржирзЗрж░ ржмрж╛ржЗрж░рзЗ ржерж╛ржХрзЗ ржПржмржВ Interrupt ржПрж░ ржзрж░ржг ржЕржирзБржпрж╛рзЯрзА ржмрж┐ржнрж┐ржирзНржиржнрж╛ржмрзЗ execute рж╣рзЯрзЗ ржерж╛ржХрзЗред ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржПрж░ ржмрж┐ржнрж┐ржирзНржи ржзрж░ржгрзЗрж░ Interrupt ржПрж░ ржоржзрзНржпрзЗ ADC Conversion Complete , Watchdog Timeout Interrupt, UART Rx Complete, 2-wire Serial Interface, Timer/Counter2 Compare Match , Timer/Counter Overflow, External Interrupt ржЕржирзНржпрждржоред ржПржжрзЗрж░ ржоржзрзНржпрзЗ ржПржХржорж╛рждрзНрж░ Hardware Interrupt рж╣рж▓ External Interruptред ржПржЗ ржзрж░ржгрзЗрж░ Interrupt ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржмрж╛ржЯржи ржЪрж╛ржкрж╛рж░ ржорж╛ржзрзНржпржорзЗ ржХрж┐ржВржмрж╛ ржкрж┐ржи рж▓рзЛ ржХрж░рзЗ ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржП Interrupt ржПрж░ ржирж┐рж░рзНржжрзЗрж╢ ржкрж╛ржарж╛ржирзЛ ржпрж╛рзЯред Interrupt ржПрж░ ржЬржирзНржп ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржлрж╛ржВрж╢ржи рж╣рж▓ ISR (Interrupt Service Routine)ред ржПржЗ ржлрж╛ржВрж╢ржирзЗрж░ ржЖрж░рзНржЧрзБржорзЗржирзНржЯрзЗ ржмрж┐ржнрж┐ржирзНржи ржзрж░ржгрзЗрж░ Interrupt ржПрж░ ржЬржирзНржп ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржнрзЗржХрзНржЯрж░ ржжрж┐рзЯрзЗ ржХрж╛ржЬ ржХрж░рждрзЗ рж╣рзЯред ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржПрж░ ржмрж┐ржнрж┐ржирзНржи ржзрж░ржгрзЗрж░ Interrupt ржПрж░ ржЬржирзНржп ржмрж┐ржнрж┐ржирзНржи ржзрж░ржгрзЗрж░ ржнрзЗржХрзНржЯрж░ AVR-LibC рждрзЗ ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░рж╛ ржЖржЫрзЗред</p>

<p>ржЖржорж░рж╛ ржПржЦржи ржжрзЗржЦржм ржХрж┐ржнрж╛ржмрзЗ ржмрж╛ржЯржи ржЪрзЗржкрзЗ ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржП Interrupt ржирж┐рж░рзНржжрзЗрж╢ ржкрж╛ржарж╛рждрзЗ рж╣рзЯред</p>

<p>Interrupt ржирж┐рзЯрзЗ ржХрж╛ржЬ ржХрж░рждрзЗ рж╣рж▓рзЗ ржЖржоржжрзЗрж░ ржкрзНрж░ржержорзЗржЗ ржХрж┐ржЫрзБ ржЬрж┐ржирж┐рж╕ ржарж┐ржХржарж╛ржХ ржХрж░рзЗ ржжрж┐рждрзЗ рж╣ржмрзЗред Interrupt рж╕ржорзНржкрж░рзНржХрж┐ржд рж╕ржХрж▓ ржлрж╛ржВрж╢ржи Interrupt.h ржП ржЖржЫрзЗред рждрж╛ржЗ Interrupt ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ рж╣рж▓рзЗ ржЕржмрж╢рзНржпржЗ ржПржЗ рж╣рзЗржбрж╛рж░ ржлрж╛ржЗрж▓ржЯрж┐ ржпрзБржХрзНржд ржХрж░рждрзЗ рж╣ржмрзЗред ржПржЦржи ржЖржорж╛ржжрзЗрж░ Global Interrupt Enable ржХрж░рждрзЗ рж╣ржмрзЗред ржПржЯрж┐ ржХрж░рждрзЗ рж╣рж▓рзЗ ржЖржорж╛ржжрзЗрж░ Status Register (SREG) ржПрж░ рзн ржиржорзНржмрж░ ржмрж┐ржЯржЯрж┐ рж╣рж╛ржЗ ржХрж░рзЗ ржжрж┐рждрзЗ рж╣ржмрзЗред ржПржЦржи ржЖржорж╛ржжрзЗрж░ MCU Control Register (MCUCR) ржПрж░ Interrupt Sense Control ржмрж┐ржЯ ржЧрзБрж▓рзЛржХрзЗ Configure ржХрж░рзЗ ржЖржоржжрзЗрж░ ржЪрж╛рж╣рж┐ржжрж╛ржоржд Interrupt рж╕рзЗржЯ ржХрж░рзЗ ржирж┐ржмрзЛред Rising Edge ржмрж▓рждрзЗ ржмрзЛржЭрж╛рзЯ рж▓рзЛ ржерзЗржХрзЗ рж╣рж╛ржЗ ржЕржмрж╕рзНржерж╛рзЯ ржпрж╛ржУрзЯрж╛рж░ ржоржзрзНржпржмрж░рзНрждрзА ржЕржмрж╕рзНржерж╛ржХрзЗ ржарж┐ржХ ржПржХржЗржнрж╛ржмрзЗ Falling Edge ржмрж▓рждрзЗ ржмрзЛржЭрж╛рзЯ рж╣рж╛ржЗ ржерзЗржХрзЗ рж▓рзЛ ржЕржмрж╕рзНржерж╛рзЯ ржпрж╛ржУрзЯрж╛рж░ ржоржзрзНржпржмрж░рзНрждрзА ржЕржмрж╕рзНржерж╛ржХрзЗред</p>

<p>[<img src="https://web.archive.org/web/20150404203855/http://d15tech.com/wp-content/uploads/2015/01/in0_table.png" alt="in0_table - D15 Technologies](https://web.archive.org/web/20150404203855im_/http://d15tech.com/wp-content/uploads/2015/01/in0_table.png)" /></p>

<p>[<img src="https://web.archive.org/web/20150404203855/http://d15tech.com/wp-content/uploads/2015/01/in1_table.png" alt="in1_table - D15 Technologies](https://web.archive.org/web/20150404203855im_/http://d15tech.com/wp-content/uploads/2015/01/in1_table.png)" /></p>

<p>ржПржЦржи ржЖржорж╛ржжрзЗрж░ ржХрж╛ржЬ рж╣рж▓ ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржПрж░ Interrupt ржПрж░ ржкрж┐ржиржХрзЗ ржЪрж╛рж▓рзБ ржХрж░рж╛ред ржПржЯрж╛ ржХрж░рж╛рж░ ржЬржирзНржп ржЖржорж╛ржжрзЗрж░ General Interrupt Control Register (GICR) ржПрж░ ржХрж┐ржЫрзБ ржкрж┐ржиржХрзЗ рж╣рж╛ржЗ ржХрж░рждрзЗ рж╣ржмрзЗред ржЖржорж░рж╛ ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржПрж░ ржпрзЗ ржкрж┐ржирзЗ Interrupt ржЗржиржкрзБржЯ ржжрж┐рждрзЗ ржЪрж╛ржЗ рж╕рзЗржЗ ржмрж┐ржЯржХрзЗ рж╣рж╛ржЗ ржХрж░рзЗ ржжрж┐ржмрзЛред INT0 ржХрзЗ ржЪрж╛рж▓рзБ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ INT0, INT1 ржХрзЗ ржЪрж╛рж▓рзБ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ INT1 ржПржмржВ INT2 ржХрзЗ ржЪрж╛рж▓рзБ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ INT2 ржмрж┐ржЯржХрзЗ рж╣рж╛ржЗ ржХрж░рзЗ ржжрж┐рждрзЗ рж╣ржмрзЗред<a href="https://web.archive.org/web/20150404203855/http://d15tech.com/wp-content/uploads/2015/01/gicr.png"><img src="https://web.archive.org/web/20150404203855im_/http://d15tech.com/wp-content/uploads/2015/01/gicr.png" alt="gicr - D15 Technologies" /></a></p>

<p>ржПржмрж╛рж░ рж╕ржорзЯ рж╣рж▓ Global Interrupt Enable ржХрж░рж╛рж░ред ржПржЯрж╛ ржХрж░рж╛рж░ ржЬржирзНржп ржЖржорж╛ржжрзЗрж░ ржпрж╛ ржХрж░рждрзЗ рж╣ржмрзЗ рждрж╛ рж╣рж▓ рж╢рзБржзрзБржорж╛рждрзНрж░ sei() ржПржЗ ржлрж╛ржВрж╢ржиржЯрж╛ ржХрж▓ ржХрж░рж╛ред ржПржЗ ржлрж╛ржВрж╢ржиржЯрж╛ Interrupt.h рж╣рзЗржбрж╛рж░ ржлрж╛ржЗрж▓рзЗ ржЖржЫрзЗред ржПржЗ ржлрж╛ржВрж╢ржиржЯрж╛ ржХрж▓ ржХрж░рж▓рзЗ Interrupt ржлрж╛ржВрж╢ржи ржЪрж╛рж▓рзБ рж╣рзЯрзЗ ржпрж╛ржмрзЗ ржПржмржВ рж╕рзЗ Interrupt ржЗржиржкрзБржЯ ржирж┐рждрзЗ ржкрж╛рж░ржмрзЗред ржЕржирзНржпржерж╛рзЯ ржкрж╛рж░ржмрзЗ ржирж╛ред ржарж┐ржХ ржПржХржЗржнрж╛ржмрзЗ Global Interrupt Disable ржХрж░рж╛рж░ ржЬржирзНржп ржЖржорж╛ржжрзЗрж░ cli() ржПржЗ ржлрж╛ржВрж╢ржиржЯрж╛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ рж╣ржмрзЗред</p>

<p>ржПржмрж╛рж░ ржПржХржЯрж╛ ржХрзЛржб ржжрзЗржЦрж╛ ржпрж╛ржХред</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="cp">#include &lt;avr/io.h&gt;
#include &lt;avr/interrupt.h&gt;
#include &lt;util/delay.h&gt;
</span>
<span class="kt">void</span>  <span class="nf">main</span><span class="p">(){</span>
	<span class="n">DDRB</span>  <span class="o">=</span>  <span class="mh">0x00</span><span class="p">;</span>
	<span class="n">PORTB</span>  <span class="o">=</span>  <span class="mh">0x00</span><span class="p">;</span>
	<span class="n">MCUCR</span><span class="o">|=</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">ISC01</span><span class="p">);</span>  <span class="c1">//INT0 ржХрзЗ Falling Edge ржП ржХржиржлрж┐ржЧрж╛рж░ ржХрж░рж╛ рж╣рж▓ред</span>
	<span class="n">GICR</span><span class="o">|=</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">INT0</span><span class="p">);</span>  <span class="c1">//INT0 ржХрзЗ Interrupt рж╣рж┐рж╕рж╛ржмрзЗ Initialize ржХрж░рж╛ рж╣рж▓ред</span>
	<span class="n">sei</span><span class="p">();</span>  <span class="c1">// Global Interrupt Enable ржХрж░рж╛ рж╣рж▓ред</span>
	<span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){;}</span>
<span class="p">}</span>

<span class="n">ISR</span><span class="p">(</span><span class="n">INT0_vect</span><span class="p">){</span>
	<span class="n">PORTB</span>  <span class="o">^=</span>  <span class="mh">0xFF</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>ржмрзНржпрж╛рж╕ рж╣рзЯрзЗ ржЧрзЗрж▓ ржмрзЗрж╕рж┐ржХ External Interrupt ржПрж░ ржХрж╛ржЬред ржПржЗ ржХрзЛржб ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржП ржжрж┐рж▓рзЗ while рж▓рзБржкрзЗрж░ ржнрж┐рждрж░рзЗ рж╕рж╛рж░рж╛ржЬрзАржмржи ржерзЗржХрзЗ ржкрзЛрж░рзНржЯ ржмрж┐ ржПрж░ рж╕ржм ржкрж┐ржи рж▓рзЛ рж╣рзЯрзЗ ржерж╛ржХрж╛рж░ ржХржерж╛ред ржХрж┐ржирзНрждрзБ INT0 ржПрж░ ржпржЦржи Falling Edge рж╣ржмрзЗ рждржЦржи ржХрзЛржб while рж▓рзБржк ржерзЗржХрзЗ ржмрзЗрж░ рж╣рзЯрзЗ рж╕рж░рж╛рж╕рж░рж┐ ISR(INT0_vect) ржлрж╛ржВрж╢ржирзЗ ржЪрж▓рзЗ ржпрж╛ржмрзЗ ржПржмржВ ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржПрж░ ржкрзЛрж░рзНржЯ ржмрж┐ ржХрзЗ toggle ржХрж░рзЗ ржжрж┐ржмрзЗред ржПржЦрж╛ржирзЗ INT0_vect рж╣рж▓ INT0 ржПрж░ ржЬржирзНржп ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржнрзЗржХрзНржЯрж░ред</p>

<p><a href="https://web.archive.org/web/20150404203855/http://d15tech.com/wp-content/uploads/2015/01/interrput.jpg"><img src="https://web.archive.org/web/20150404203855im_/http://d15tech.com/wp-content/uploads/2015/01/interrput.jpg" alt="interrput  - D15 Technologies" /></a></p>

<p>ржЪрж┐рждрзНрж░рзЗрж░ ржоржд рж╕ржВржпрзЛржЧ ржжрж┐рж▓рзЗ рж╕ржмржХрж┐ржЫрзБ ржарж┐ржХ ржерж╛ржХрж▓рзЗ ржмрж╛ржЯржи ржЪрж╛ржкрж╛рж░ рж╕рж╛ржерзЗ рж╕рж╛ржерзЗ ржорж╛ржЗржХрзНрж░рзЛржХржирзНржЯрзНрж░рзЛрж▓рж╛рж░ ржПрж░ ржкрзЛрж░рзНржЯ ржмрж┐ ржХрзЗ toggle рж╣рзЯрзЗ ржпрж╛ржмрзЗред</p>
:ET